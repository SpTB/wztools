---
title: "Untitled"
format: html
editor: visual
---

## Quarto

```{r}
sample_prior<-function(nsamp=10000, gamma_parsA=c(1,1), gamma_parsB=c(1,1)) {
  
  
  beta=vector('numeric', length = 0)
  for (i in 1:nsamp) {
    a = rgamma(1,gamma_parsA[1], gamma_parsA[2])+1
    b=rgamma(1,gamma_parsB[1], gamma_parsB[2])+1
    beta = c(beta, rbeta(1,a,b))
  }
  return (beta )
  # print(paste0('p(B)<0.05 = ',mean(beta<0.05)))
  # print(paste0('p(B)>0.50 = ',mean(beta>0.5)))
  # plot(density(beta))
}

sample_prior2<-function(nsamp=10000, gamma_parsA=c(1,1), gamma_parsB=c(1,1)) {
  
  
  beta=vector('numeric', length = 0)
  for (i in 1:nsamp) {
    a = rgamma(1,gamma_parsA[1], gamma_parsA[2])
    b=rgamma(1,gamma_parsB[1], gamma_parsB[2])
    beta = c(beta, rbeta(1,a,b))
  }
  return (beta )
  # print(paste0('p(B)<0.05 = ',mean(beta<0.05)))
  # print(paste0('p(B)>0.50 = ',mean(beta>0.5)))
  # plot(density(beta))
}

draw_mu_from_gamma2 <- function(gamma_parsA=c(1,1), gamma_parsB=c(1,1), shift=0, scale=1, nsim) {
  alpha = rgamma(n=nsim, gamma_parsA[1], gamma_parsA[2])+0
  beta = rgamma(n=nsim, gamma_parsB[1], gamma_parsB[2])+0
  mu_beta = alpha/(alpha+beta) * scale + shift
  return (mu_beta)
}
```

You can add options to executable code like this

```{r}
b1 = sample_prior()
b2 = wztools::draw_mu_from_gamma(nsim=10000)

plot(density(b1))
lines(density(b2), col='red')
```

The `echo: false` option disables the printing of code (only output is displayed).

```{r}
nsim=10000
bm1 = draw_mu_from_gamma(gamma_parsA = c(1,1), c(1,1),nsim=nsim)
bm2 = draw_mu_from_gamma(gamma_parsA = c(1,1), c(1,.75),nsim=nsim)
bm3 = draw_mu_from_gamma(gamma_parsA = c(1,1), c(1,.5),nsim=nsim)
bm4 = draw_mu_from_gamma(gamma_parsA = c(1,1), c(1,.25),nsim=nsim)

plot(density(bm1))
lines(density(bm2), col='blue')
lines(density(bm3), col='orange')
lines(density(bm4), col='darkgreen')

```

```{r}
cat('p(B) >= 0.01:', mean(bm1<=0.01), ', ',mean(bm2<=0.01), ', ',mean(bm3<=0.01),', ',mean(bm4<=0.01), '\n')

cat('p(B) >= 0.05:', mean(bm1<=0.05), ', ',mean(bm2<=0.05), ', ',mean(bm3<=0.05),', ',mean(bm4<=0.05), '\n')

cat('p(B) >= 0.05:', mean(bm1<=0.10), ', ',mean(bm2<=0.10), ', ',mean(bm3<=0.10),', ',mean(bm4<=0.10), '\n')
```

```{r}
nsim=10000
bm1 = draw_mu_from_gamma2(gamma_parsA = c(1,1), c(1,1),nsim=nsim)
bm2 = draw_mu_from_gamma2(gamma_parsA = c(1,1), c(1,.75),nsim=nsim)
bm3 = draw_mu_from_gamma2(gamma_parsA = c(1,1), c(1,.5),nsim=nsim)
bm4 = draw_mu_from_gamma2(gamma_parsA = c(1,1), c(1,.25),nsim=nsim)
bm5 = draw_mu_from_gamma2(gamma_parsA = c(1,1), c(1,.1),nsim=nsim)

plot(density(bm4))
lines(density(bm3), col='blue')
lines(density(bm2), col='orange')
lines(density(bm1), col='darkgreen')
cat('p(B) <= 0.01:', mean(bm1<=0.01), ', ',mean(bm2<=0.01), ', ',mean(bm3<=0.01),', ',mean(bm4<=0.01), '\n')

cat('p(B) <= 0.05:', mean(bm1<=0.05), ', ',mean(bm2<=0.05), ', ',mean(bm3<=0.05),', ',mean(bm4<=0.05), '\n')

cat('p(B) <= 0.05:', mean(bm1<=0.10), ', ',mean(bm2<=0.10), ', ',mean(bm3<=0.10),', ',mean(bm4<=0.10), '\n')

cat('p(B) >= 0.25:', mean(bm1>=0.25), ', ',mean(bm2>=0.25), ', ',mean(bm3>=0.25),', ',mean(bm4>=0.25), '\n')
```

```{r}
bm1 = draw_mu_from_gamma2(gamma_parsA = c(1,1), c(1,1),nsim=nsim)
bm2 = draw_mu_from_gamma2(gamma_parsA = c(2,2), c(2,2),nsim=nsim)
bm3 = draw_mu_from_gamma2(gamma_parsA = c(3,3), c(3,3),nsim=nsim)
bm4 = draw_mu_from_gamma2(gamma_parsA = c(4,4), c(4,4),nsim=nsim)
bm5 = draw_mu_from_gamma(gamma_parsA = c(1,1), c(1,1),nsim=nsim)
plot(density(bm5))
lines(density(bm4), col='green')
lines(density(bm3), col='blue')
lines(density(bm2), col='orange')

```

```{r}
cat('p(B) <= 0.01:', mean(bm1<=0.01), ', ',mean(bm2<=0.01), ', ',mean(bm3<=0.01),', ',mean(bm4<=0.01), '\n',', ',mean(bm5<=0.01),'\n')

cat('p(B) <= 0.05:', mean(bm1<=0.01), ', ',mean(bm2<=0.05), ', ',mean(bm3<=0.05),', ',mean(bm4<=0.05), '\n',', ',mean(bm5<=0.05),'\n')
```

```{r}

bm1 = draw_mu_from_gamma2(gamma_parsA = c(1,1), c(1,.1),nsim=nsim)
bm2 = draw_mu_from_gamma2(gamma_parsA = c(1,5), c(1,.1),nsim=nsim)

plot(density(bm2))
lines(density(bm1), col='blue')
# lines(density(bm2), col='orange')
# lines(density(bm1), col='darkgreen')
# cat('p(B) <= 0.01:', mean(bm1<=0.01), ', ',mean(bm2<=0.01), ', ',mean(bm3<=0.01),', ',mean(bm4<=0.01), '\n')
# 
# cat('p(B) <= 0.05:', mean(bm1<=0.05), ', ',mean(bm2<=0.05), ', ',mean(bm3<=0.05),', ',mean(bm4<=0.05), '\n')
# 
# cat('p(B) <= 0.05:', mean(bm1<=0.10), ', ',mean(bm2<=0.10), ', ',mean(bm3<=0.10),', ',mean(bm4<=0.10), '\n')
# 
# cat('p(B) >= 0.25:', mean(bm1>=0.25), ', ',mean(bm2>=0.25), ', ',mean(bm3>=0.25),', ',mean(bm4>=0.25), '\n')
```

## Recommended Settings

### 1. Flat Priors (not recommended)

```{r}
gamma_parsA = c(1,1)
gamma_parsB = c(1,1)

flat = draw_mu_from_gamma2(gamma_parsA = gamma_parsA,
                           gamma_parsB = gamma_parsB,
                           nsim=10000)
plot(density(flat))
```

```{r}
cat('p(B)<0.01',mean(flat<=0.01),'\n')
cat('p(B)<0.10',mean(flat<=0.10),'\n')
cat('p(B)<0.25',mean(flat<=0.25),'\n')
cat('p(B)>0.50',mean(flat<=0.5),'\n')
cat('p(B)>0.75',mean(flat>=0.75),'\n')
cat('p(B)>0.95',mean(flat>=0.95),'\n')
```

### 2. Symmetrically Informed

-   gives 10% of probability of values within the top and bottom 25% range

-   good for bounded regression parameters

```{r}
gamma_parsA = c(3,3)
gamma_parsB = c(3,3)

sym_inf = draw_mu_from_gamma2(gamma_parsA = gamma_parsA,
                           gamma_parsB = gamma_parsB,
                           nsim=10000)
plot(density(sym_inf))
```

```{r}
cat('p(B)<0.01',mean(sym_inf<=0.01),'\n')
cat('p(B)<0.10',mean(sym_inf<=0.10),'\n')
cat('p(B)<0.25',mean(sym_inf<=0.25),'\n')
cat('p(B)>0.50',mean(sym_inf<=0.5),'\n')
cat('p(B)>0.75',mean(sym_inf>=0.75),'\n')
cat('p(B)>0.95',mean(sym_inf>=0.95),'\n')
```

## 3. Sceptical

-   gives the highest probability to values close to 0 (similar to e.g. gamma distribution)

-   good for parameters which need strong evidence for deviating from their minimal value (usually means that their bottom bound is 0)

    ```{r}
    gamma_parsA = c(1,1)
    gamma_parsB = c(1,.1)

    scep = draw_mu_from_gamma2(gamma_parsA = gamma_parsA,
                               gamma_parsB = gamma_parsB,
                               nsim=10000)
    plot(density(scep))
    ```

```{r}
cat('p(B)<0.01',mean(scep<=0.01),'\n')
cat('p(B)<0.10',mean(scep<=0.10),'\n')
cat('p(B)<0.25',mean(scep<=0.25),'\n')
cat('p(B)>0.50',mean(scep<=0.5),'\n')
cat('p(B)>0.75',mean(scep>=0.75),'\n')
cat('p(B)>0.95',mean(scep>=0.95),'\n')
```

Looking closely, we can see that the maximum prior density is around x= 0.025, and not at x = 0:

```{r}

gamma_parsA = c(1,3)
gamma_parsB = c(1,.1)

scep = draw_mu_from_gamma2(gamma_parsA = gamma_parsA,
                           gamma_parsB = gamma_parsB,
                           nsim=10000)

x=density(scep)
summary(x$y)
which(x$y==max(x$y))
x$x[which(x$y==max(x$y))]
```

This makes sense, since the plotted parameter is the prior of the group level mean, and the mean could only reach exactly 0, if all the individual parameters are exactly 0. Let's see the prior for the individual parameter:

```{r}
sample = sample_prior2(gamma_parsA = gamma_parsA,
                           gamma_parsB = gamma_parsB)
plot(density(sample))
```

```{r}
x=density(sample)
summary(x$y)
which(x$y==max(x$y))
x$x[which(x$y==max(x$y))]
```

## Further tests (with original gamma+1)

```{r}
nsim=10000
bm1 = draw_mu_from_gamma(gamma_parsA = c(1,1), c(1,1),nsim=nsim)
bm2 = draw_mu_from_gamma(gamma_parsA = c(1,1), c(1,.75),nsim=nsim)
bm3 = draw_mu_from_gamma(gamma_parsA = c(1,1), c(1,.5),nsim=nsim)
bm4 = draw_mu_from_gamma(gamma_parsA = c(1,1), c(1,.25),nsim=nsim)
bm5 = draw_mu_from_gamma(gamma_parsA = c(1,1), c(1,.1),nsim=nsim)

plot(density(bm1))
lines(density(bm2), col='blue')
lines(density(bm3), col='orange')
lines(density(bm4), col='darkgreen')
lines(density(bm5), col='red')
```

```{r}
mean(bm5<=0.01)
mean(bm5<=0.05)0.008
```

```{r}
sample = sample_prior(gamma_parsA = c(1,1), gamma_parsB=c(1,.1))
plot(density(sample))
```

```{r}
mean(sample<=0.01)
mean(sample<=0.05)
```
